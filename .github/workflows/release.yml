name: Build and Release

on:
  push:
    tags:
      - "v*.*

permissions:
  contents: write   
jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust (stable)
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build (release)
        run: cargo build --release

      - name: Package artifact
        run: |
          if [ "${{ runner.os }}" = "Windows" ]; then
            # On windows use PowerShell Compress-Archive (this run will execute in pwsh on windows runner)
            powershell -Command "Compress-Archive -Path target\\release\\pulsedcm.exe -DestinationPath pulsedcm-${{ github.ref_name }}-windows-x86_64.zip"
          else
            # macOS / Linux: tar.gz
            tar -C target/release -czf pulsedcm-${{ github.ref_name }}-${{ runner.os | toLower }}-x86_64.tar.gz pulsedcm
          fi

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: pulsedcm-${{ matrix.os }}
          path: |
            pulsedcm-${{ github.ref_name }}-windows-x86_64.zip
            pulsedcm-${{ github.ref_name }}-ubuntu-latest-x86_64.tar.gz
            pulsedcm-${{ github.ref_name }}-macos-latest-x86_64.tar.gz

  create_release:
    name: Create Release and attach artifacts
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: List downloaded artifacts
        run: ls -la ./artifacts || true

      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          files: ./artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

